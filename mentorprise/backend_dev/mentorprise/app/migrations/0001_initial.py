# Generated by Django 4.0.2 on 2022-02-23 21:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('positives', models.TextField()),
                ('negatives', models.TextField()),
                ('creation_datetime', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('start_datetime', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('cancelled', models.BooleanField()),
                ('event_type', models.TextField()),
                ('capacity', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('start_datetime', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('cancelled', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StrengthWeakness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_type', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SystemFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.TextField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('password_salt', models.TextField()),
                ('password_hash', models.TextField()),
                ('biography', models.TextField()),
                ('email', models.TextField()),
                ('business_area', models.TextField()),
                ('job_title', models.TextField()),
                ('mentor', models.BooleanField()),
                ('expert_at', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.strengthweakness')),
            ],
        ),
        migrations.CreateModel(
            name='StrengthWeaknessList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_strength', models.BooleanField()),
                ('sw_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.strengthweakness')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField()),
                ('code', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Pairing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_proposal', models.BooleanField()),
                ('terminated', models.BooleanField()),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentee_pairing', to='app.user')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_pairing', to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('is_read', models.BooleanField()),
                ('link', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('complete', models.BooleanField()),
                ('creation_datetime', models.DateTimeField()),
                ('deadline', models.DateTimeField()),
                ('urgency', models.SmallIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingWeaknesses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.meeting')),
                ('weakness_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.strengthweakness')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('is_rejected', models.BooleanField()),
                ('rejection_note', models.TextField()),
                ('time1', models.DateTimeField()),
                ('duration1', models.IntegerField()),
                ('time2', models.DateTimeField()),
                ('duration2', models.IntegerField()),
                ('time3', models.DateTimeField()),
                ('duration3', models.IntegerField()),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentee_meeting', to='app.user')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_meeting', to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('positives', models.TextField()),
                ('negatives', models.TextField()),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_given_feedback', to='app.user')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.meeting')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='meeting',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_instructor_meeting', to='app.user'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='mentee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_mentee_meeting', to='app.user'),
        ),
        migrations.CreateModel(
            name='ImprovedWeaknesses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.generalfeedback')),
                ('weakness_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.strengthweakness')),
            ],
        ),
        migrations.CreateModel(
            name='GroupEventWeaknesses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupevent')),
                ('weakness_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.strengthweakness')),
            ],
        ),
        migrations.CreateModel(
            name='GroupEventFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('positives', models.TextField()),
                ('negatives', models.TextField()),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_given_feedback', to='app.user')),
                ('group_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupevent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='groupevent',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_instructor_meeting', to='app.user'),
        ),
        migrations.AddField(
            model_name='generalfeedback',
            name='giver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_given_feedback', to='app.user'),
        ),
        migrations.AddField(
            model_name='generalfeedback',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_received_feedback', to='app.user'),
        ),
        migrations.CreateModel(
            name='Authenticator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_token', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended', models.BooleanField()),
                ('attendee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
                ('group_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.groupevent')),
            ],
        ),
    ]
